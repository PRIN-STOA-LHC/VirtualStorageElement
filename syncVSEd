#! /bin/bash
#
# Author: svallero@to.infn.it
#
# /etc/init.d/syncVSEd
#
### BEGIN INIT INFO
# Provides: syncVSEd
# Required-Start: 
# Should-Start: 
# Required-Stop: 
# Should-Stop:
# Default-Start:  3 5
# Default-Stop:   0 1 2 6
# Short-Description: VSE daemon process
# Description:    Runs up the VSE daemon process
### END INIT INFO

# Some color
red='\e[0;31m'
green='\e[0;32m'
orange='\e[0;33m'
blue='\e[0;34m'
magenta='\e[0;35m'
cyan='\e[0;36m'
nc='\e[0m' # No Color


# Default control variables
if [ `whoami` == 'vseadmin' ] ; then
   export path_to_daemon="/home/vseadmin/syncVSEd"
   export config_file="/home/vseadmin/syncVSEd/syncVSEd.cfg"
   export log_level="DEBUG"
else
   echo "Should run as user vseadmin!"
   exit 1
fi
e
case "$1" in
  start)
    echo -e "${green}Starting server...${nc}"
    # Start the daemon 
    python $path_to_daemon/syncVSEd.py start -l $log_level -c $config_file
    exit $?
    ;;
  stop)
    echo -e "${blue}Stopping server...${nc}"
    # Stop the daemon
    python $path_to_daemon/syncVSEd.py stop
    exit $?
    ;;
  restart)
    echo -e "${green}Restarting server...${nc}"
    # do not use python-daemon restart function
    # because it does not reload config file
    #python $path_to_daemon/syncVSEd.py restart
    python $path_to_daemon/syncVSEd.py stop
    python $path_to_daemon/syncVSEd.py start -l $log_level -c $config_file
    exit $?
    ;;
  status)
    echo -e "${nc}Querying server status...${nc}"
    out=$( ps -e -o pid,command | grep "syncVSEd.py" | grep "start")
  if [ "$out" == '' ] ; then
    echo -e "${red}syncVSEd is not running!${nc}"
  else
    export pid=$(echo $out | awk '{ print $1 }')
    echo -e "${green}syncVSEd running with PID $pid!${nc}"
  fi
    exit $?
    ;;
  log)
    echo -e "${magenta}Getting server logs...${nc}"
    file=`cat $config_file | grep "logfile" | awk -F"=" '{print $2}'`
    tail -f $file | while read line
      do
  	if [[ $line == *DEBUG* ]];then
           echo -e "${green}$line${nc}";
        elif [[ $line == *INFO* ]];then
           echo -e "${nc}$line${nc}";
        elif [[ $line == *WARNING* ]];then
           echo -e "${orange}$line${nc}";
        elif [[ $line == *ERROR* ]];then
           echo -e "${red}$line${nc}";
        fi
done
    exit $?
    ;;
  *)
    # Refuse to do other stuff
    echo -e "${magenta}Usage: /etc/init.d/syncVSEd {start|stop|restart|status|log}${nc}"
    exit 1
    ;;
esac

exit 0
